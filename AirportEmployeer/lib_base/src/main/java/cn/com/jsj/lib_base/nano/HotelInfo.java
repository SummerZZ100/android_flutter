// Generated by the protocol buffer compiler.  DO NOT EDIT!

package cn.com.jsj.lib_base.nano;

import cn.com.jsj.lib_common.netcore.bean.ParcelableMessageNano;
import cn.com.jsj.lib_common.netcore.bean.ParcelableMessageNanoCreator;

@SuppressWarnings("hiding")
public final class HotelInfo extends
        ParcelableMessageNano {

  // Used by Parcelable
  @SuppressWarnings({"unused"})
  public static final Creator<HotelInfo> CREATOR =
      new ParcelableMessageNanoCreator<
                HotelInfo>(HotelInfo.class);

  private static volatile HotelInfo[] _emptyArray;
  public static HotelInfo[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new HotelInfo[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional int32 HotelId = 1 [default = 0];
  public int hotelId;

  // optional string HotelCode = 2;
  public String hotelCode;

  // optional int32 RoomId = 3 [default = 0];
  public int roomId;

  // optional string RoomTypeId = 4;
  public String roomTypeId;

  // optional string RatePlanld = 5;
  public String ratePlanld;

  // optional string RatePlanCode = 6;
  public String ratePlanCode;

  // optional string StartDate = 7;
  public String startDate;

  // optional string EndDate = 8;
  public String endDate;

  // optional int32 SupplierId = 9 [default = 0];
  public int supplierId;

  // optional int32 CityID = 10 [default = 0];
  public int cityID;

  // optional int32 RoomNum = 11 [default = 0];
  public int roomNum;

  public HotelInfo() {
    clear();
  }

  public HotelInfo clear() {
    hotelId = 0;
    hotelCode = "";
    roomId = 0;
    roomTypeId = "";
    ratePlanld = "";
    ratePlanCode = "";
    startDate = "";
    endDate = "";
    supplierId = 0;
    cityID = 0;
    roomNum = 0;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.hotelId != 0) {
      output.writeInt32(1, this.hotelId);
    }
    if (!this.hotelCode.equals("")) {
      output.writeString(2, this.hotelCode);
    }
    if (this.roomId != 0) {
      output.writeInt32(3, this.roomId);
    }
    if (!this.roomTypeId.equals("")) {
      output.writeString(4, this.roomTypeId);
    }
    if (!this.ratePlanld.equals("")) {
      output.writeString(5, this.ratePlanld);
    }
    if (!this.ratePlanCode.equals("")) {
      output.writeString(6, this.ratePlanCode);
    }
    if (!this.startDate.equals("")) {
      output.writeString(7, this.startDate);
    }
    if (!this.endDate.equals("")) {
      output.writeString(8, this.endDate);
    }
    if (this.supplierId != 0) {
      output.writeInt32(9, this.supplierId);
    }
    if (this.cityID != 0) {
      output.writeInt32(10, this.cityID);
    }
    if (this.roomNum != 0) {
      output.writeInt32(11, this.roomNum);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.hotelId != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.hotelId);
    }
    if (!this.hotelCode.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.hotelCode);
    }
    if (this.roomId != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.roomId);
    }
    if (!this.roomTypeId.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.roomTypeId);
    }
    if (!this.ratePlanld.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(5, this.ratePlanld);
    }
    if (!this.ratePlanCode.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(6, this.ratePlanCode);
    }
    if (!this.startDate.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(7, this.startDate);
    }
    if (!this.endDate.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(8, this.endDate);
    }
    if (this.supplierId != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(9, this.supplierId);
    }
    if (this.cityID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(10, this.cityID);
    }
    if (this.roomNum != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(11, this.roomNum);
    }
    return size;
  }

  @Override
  public HotelInfo mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          this.hotelId = input.readInt32();
          break;
        }
        case 18: {
          this.hotelCode = input.readString();
          break;
        }
        case 24: {
          this.roomId = input.readInt32();
          break;
        }
        case 34: {
          this.roomTypeId = input.readString();
          break;
        }
        case 42: {
          this.ratePlanld = input.readString();
          break;
        }
        case 50: {
          this.ratePlanCode = input.readString();
          break;
        }
        case 58: {
          this.startDate = input.readString();
          break;
        }
        case 66: {
          this.endDate = input.readString();
          break;
        }
        case 72: {
          this.supplierId = input.readInt32();
          break;
        }
        case 80: {
          this.cityID = input.readInt32();
          break;
        }
        case 88: {
          this.roomNum = input.readInt32();
          break;
        }
      }
    }
  }

  public static HotelInfo parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new HotelInfo(), data);
  }

  public static HotelInfo parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new HotelInfo().mergeFrom(input);
  }
}
